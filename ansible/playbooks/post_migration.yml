---
- name: Configure Post-Migration Setup
  hosts: azure_vms
  become: true

  vars:
    backup_vault: "{{ lookup('env', 'AZURE_BACKUP_VAULT') }}"
    resource_group: "{{ lookup('env', 'AZURE_RESOURCE_GROUP') }}"
    subscription_id: "{{ lookup('env', 'ARM_SUBSCRIPTION_ID') }}"

  tasks:
    - name: Install Azure VM Agent
      ansible.builtin.package:
        name: waagent
        state: latest
      when: ansible_os_family in ['RedHat', 'Debian']

    - name: Configure Azure Monitor Agent
      ansible.builtin.include_role:
        name: vm_config
        tasks_from: monitor_agent

    - name: Check if Azure collection is available
      ansible.builtin.command: ansible-galaxy collection list azure.azcollection
      register: collection_check
      ignore_errors: true
      changed_when: false
      check_mode: no

    - name: Set collection availability fact
      ansible.builtin.set_fact:
        azure_collection_available: "{{ collection_check.rc == 0 }}"

    - name: Register with Azure Recovery Services
      azure.azcollection.azure_rm_backup_protectionitem:
        resource_group: "{{ resource_group }}"
        vault_name: "{{ backup_vault }}"
        vm_name: "{{ inventory_hostname }}"
        policy_name: "DefaultPolicy"
        state: present
      when: azure_collection_available | bool

    - name: Display backup protection info (when collection unavailable)
      ansible.builtin.debug:
        msg: |
          Azure collection not available. To enable backup protection:
          1. Install collection: ansible-galaxy collection install -r requirements.yml
          2. Or use Azure CLI: 
             az backup protection enable-for-vm \
               --resource-group "{{ resource_group }}" \
               --vault-name "{{ backup_vault }}" \
               --vm "{{ inventory_hostname }}" \
               --policy-name "DefaultPolicy"
      when: not (azure_collection_available | bool)

    - name: Enable Security Center
      azure.azcollection.azure_rm_securitycenter:
        resource_group: "{{ resource_group }}"
        workspace: "{{ workspace_name }}"
        state: present

    - name: Ensure backup report directory exists
      ansible.builtin.file:
        path: "/tmp/migration_reports"
        state: directory
        mode: '0755'

    - name: Write migration note
      ansible.builtin.copy:
        dest: "/tmp/migration_reports/{{ inventory_hostname }}.txt"
        content: "Migration post-configuration completed for {{ inventory_hostname }}\n"